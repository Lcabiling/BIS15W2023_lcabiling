knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("shiny")
library(shiny)
library(tidyverse)
library(palmerpenguins)
names(palmerpenguins)
names(palmerpenguins)
names(penguins)
penguins %>%
ggplot(aes(x=bill_length_mm, y = bill_depth_mm))+
geom_point()
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color=species))+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color="species"))+
geom_point()+
theme_light(base_size=18)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color="species"))+
geom_point()
})
}
shinyApp(ui, server)
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color="species"))+
geom_point()+
theme_light(base_size = 18)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color="species"))+
geom_point()+
theme_light(base_size = 18)
})
}
shinyApp(ui, server)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange %>%
ggplot(aes(x=locomotion fill=trophic.guild))
homerange %>%
ggplot(aes(x=locomotion fill=trophic.guild))+
homerange %>%
ggplot(aes(x=locomotion, fill=trophic.guild))+
geom_bar(position = "dodge")
homerange %>%
ggplot(aes(x=locomotion, fill=trophic.guild))+
geom_bar(position = "dodge")
names(homerange)
homerange %>%
ggplot(aes(x=locomotion, fill=realm))+
geom_bar(position = "dodge")
homerange %>%
ggplot(aes(x=locomotion, fill=thermoregulation))+
geom_bar(position = "dodge")
homerange %>%
ggplot(aes(x=locomotion, fill=primarymethod))+
geom_bar(position = "dodge")
homerange %>%
ggplot(aes(x=locomotion, fill=dimension))+
geom_bar(position = "dodge")
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select Fill Variable", choices = c("realm", "trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x=locomotion, fill=input$x))+
geom_bar(position = "dodge")+
theme_light(base_size = 18)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select Fill Variable", choices = c("realm", "trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x="locomotion", fill=input$x))+
geom_bar(position = "dodge")+
theme_light(base_size = 18)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select Fill Variable", choices = c("realm", "trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x="locomotion", fill=input$x))+
geom_bar(position = "dodge", alpha = 0.8, color="black")+
labs(x=NULL, y=NULL, fill = "Fill Variable")
})
}
shinyApp(ui, server)
install.packages("shinydashboard")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
runApp('homerange_app.R')
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
library(tidyverse)
library(palmerpenguins)
library(palmerpenguins)
table(homerange$taxon)
names(homerange)
homerange %>%
filter(taxon=="mammals")
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color = "black", alpha = 0.6)
homerange %>%
filter(taxon=="mammals")
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color = "black", alpha = 0.6)
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color = "black", alpha = 0.6)
shinyApp(ui, server)
table(homerange$taxon)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "Select Taxon", choices = c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "snakes", "tortoises", "turtles"),
selected = "birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(homerange, aes_string(x=log10.hra))+
geom_density(fill="steelblue", color = "black", alpha = 0.6)
})
}
shinyApp(ui, server)
homerange %>%
filter(taxon==input$x) %>%
ggplot(homerange, aes_string(x=log10.hra))+
geom_density()
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "Select Taxon", choices = c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "snakes", "tortoises", "turtles"),
selected = "birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(homerange, aes_string(x=log10.hra))+
geom_density()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "Select Taxon",
choices = c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "snakes", "tortoises", "turtles"), selected = "birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes_string(x=log10.hra))+
geom_density()
})
}
shinyApp(ui, server)
View(homerange)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "Select Taxon",
choices = c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "snakes", "tortoises", "turtles"), selected = "birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes_string(x=log10.hra))+
geom_density()
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "Select Taxon",
choices = c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "snakes", "tortoises", "turtles"), selected = "birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes_string(x=log10.hra))+
geom_density()
})
}
shinyApp(ui, server)
View(homerange)
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color = "black", alpha = 0.6)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "Select Taxon",
choices = c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "snakes", "tortoises", "turtles"), selected = "birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color = "black", alpha = 0.6)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "Select Taxon",
choices = c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "snakes", "tortoises", "turtles"), selected = "birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color = "black", alpha = 0.6)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize) +
theme_light()
})
}
shinyApp(ui, server)
