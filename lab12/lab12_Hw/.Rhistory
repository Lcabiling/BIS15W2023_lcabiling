server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="orange", alpha=0.85) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH)",
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
)
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="orange", alpha=0.85) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH)",
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
)
) # close the row
) # close the dashboard body
) # close the ui
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH)",
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
)
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="orange", alpha=0.85) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
wolves %>%
filter(sex!="NA")
wolves %>%
filter(sex!="NA") %>%
group_by(pop)
wolves %>%
filter(sex!="NA") %>%
group_by(pop) %>%
count(sex)
ui <- dashboardPage(
dashboardHeader(title = "Distribution of Sex Among Wolves Population"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Population Selection", width = 7,
radioButtons("x", "Select X Variable", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
box(title = "Wolves Population", width = 2,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar(color="black", fill="lightpink", alpha=0.75) +
theme_light(base_size = 15) +
theme(axis.text.x = element_text(hjust = 1))+
labs(x = "sex", y=NULL)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH)",
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
)
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="orange", alpha=0.85) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(disable = F),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH)",
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 2,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
)
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH)",
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 2,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
)
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 7,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH)",
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 2,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
)
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 7,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH)",
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 5,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
)
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 7,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 5,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 5,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 5,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Distribution of Sex against Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Distribution of Sex Against Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Distribution of Wolve Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
), # close the first box
box(title = "Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Population"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
), # close the first box
box(title = "Distribution of Sex among Wolve Population", width = 7,
plotOutput("plot", width = "650px", height = "550px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar(color="black", fill="lightpink", alpha=0.9) +
theme_light(base_size = 18)+
labs(x = "Sex", y = "Count")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
